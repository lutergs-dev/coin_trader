spring:
  data:
    mongodb:
      uri: mongodb+srv://${MONGO_USERNAME:'username'}:${MONGO_PASSWORD:'password'}@${MONGO_URL:'url'}/${MONGO_DATABASE:'db'}?retryWrites=true&w=majority
  application:
    name: "CoinTraderManager"
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-server}
    listener:
      client-id: "CoinTraderManager"
    consumer:
      group-id: "CoinTraderManager"
    properties:
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_API_KEY:api_key}' password='${KAFKA_API_SECRET:api_secret}';

custom:
  trade:
    sell:
      phase1:
        wait-minute: ${PHASE_1_WAIT_MINUTE:150}
        profit-percent: ${PHASE_1_PROFIT_PERCENT:1.5}
        loss-percent: ${PHASE_1_LOSS_PERCENT:3.0}
      phase2:
        wait-minute: ${PHASE_2_WAIT_MINUTE:90}
        profit-percent: ${PHASE_2_PROFIT_PERCENT:0.1}
        loss-percent: ${PHASE_2_LOSS_PERCENT:2.0}
  upbit:
    access-key: ${UPBIT_ACCESS_KEY:access-key}
    secret-key: ${UPBIT_SECRET_KEY:secret-key}
  kubernetes:
    namespace: ${KUBERNETES_NAMESPACE:default}
    image:
      pull-secret-name: ${KUBERNETES_IMAGE_PULL_SECRET_NAME:image-pull-secret}
      pull-policy: ${KUBERNETES_IMAGE_PULL_POLICY:IfNotPresent}
      name: ${KUBERNETES_IMAGE_NAME:coin-trade-worker}
    env-secret-name: ${KUBERNETES_ENV_SECRET_NAME:env-secret-name}
    kube-config-location: ${KUBERNETES_KUBECONFIG_LOCATION:/var/kube/config}
  kafka:
    topic:
      trade-result: ${KAFKA_TRADE_RESULT_TOPIC:'trade-result'}
      danger-coin: ${KAFKA_DANGER_COIN_TOPIC:'danger-coin-alert'}
  message-sender:
    url: ${MESSAGE_SENDER_URL:'url'}
    topic: ${MESSAGE_SENDER_TOPIC:'topic'}
    username: ${MESSAGE_SENDER_USERNAME:'username'}
    password: ${MESSAGE_SENDER_PASSWORD:'password'}

universal:
  db:
    influx:
      host-url: ${INFLUX_HOST_URL:'http://localhost'}
      token: ${INFLUX_TOKEN:'abc'}
      database: ${INFLUX_DATABASE:'database'}
